name: Security Scan

on:
  schedule:
    # Run security scan daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - '**/package*.json'
      - '**/Dockerfile'
      - '**/*.csproj'

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  trivy-scan:
    runs-on: ubuntu-latest
    name: Trivy Security Scan
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Run Trivy vulnerability scanner in repo mode
      uses: aquasecurity/trivy-action@0.24.0
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
        severity: 'CRITICAL,HIGH'
        exit-code: '0'
        ignore-unfixed: true
        skip-dirs: 'node_modules,bin,obj,.git,tests,coverage'
    
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'
        category: 'trivy-scheduled-scan'
    
    - name: Generate security report
      if: always()
      run: |
        echo "# Security Scan Report" > security-report.md
        echo "Generated on: $(date)" >> security-report.md
        echo "" >> security-report.md
        
        if [ -f trivy-results.sarif ]; then
          echo "## Scan Results" >> security-report.md
          echo "Trivy scan completed successfully." >> security-report.md
          
          # Count vulnerabilities by severity
          CRITICAL=$(jq '.runs[0].results[] | select(.level == "error") | .ruleId' trivy-results.sarif 2>/dev/null | wc -l || echo "0")
          HIGH=$(jq '.runs[0].results[] | select(.level == "warning") | .ruleId' trivy-results.sarif 2>/dev/null | wc -l || echo "0")
          
          echo "- Critical vulnerabilities: $CRITICAL" >> security-report.md
          echo "- High vulnerabilities: $HIGH" >> security-report.md
        else
          echo "## Scan Results" >> security-report.md
          echo "No scan results file found." >> security-report.md
        fi
        
        echo "" >> security-report.md
        echo "For detailed results, check the Security tab in GitHub." >> security-report.md
    
    - name: Upload security report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: security-report
        path: |
          trivy-results.sarif
          security-report.md

  dependency-check:
    runs-on: ubuntu-latest
    name: Dependency Check
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: |
          frontend/package-lock.json
          microservice/package-lock.json
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
    
    - name: Check npm dependencies - Frontend
      run: |
        cd frontend
        npm audit --audit-level=high --production || true
        npm audit fix --dry-run || true
    
    - name: Check npm dependencies - Microservice
      run: |
        cd microservice
        npm audit --audit-level=high --production || true
        npm audit fix --dry-run || true
    
    - name: Check .NET dependencies
      run: |
        cd backend
        dotnet list package --vulnerable --include-transitive || true
        dotnet list package --outdated || true