<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>SmartFinance - Sistema Online</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            color: #333;
        }

        .container {
            background: rgba(255, 255, 255, 0.95);
            padding: 3rem;
            border-radius: 20px;
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
            text-align: center;
            max-width: 600px;
            width: 90%;
            backdrop-filter: blur(10px);
        }

        .logo {
            font-size: 3rem;
            font-weight: bold;
            color: #667eea;
            margin-bottom: 1rem;
        }

        .status {
            display: inline-flex;
            align-items: center;
            gap: 10px;
            background: #10b981;
            color: white;
            padding: 0.5rem 1.5rem;
            border-radius: 25px;
            font-weight: 600;
            margin: 1rem 0;
        }

        .status::before {
            content: "●";
            animation: pulse 2s infinite;
        }

        @keyframes pulse {
            0%, 100% { opacity: 1; }
            50% { opacity: 0.5; }
        }

        .description {
            font-size: 1.1rem;
            line-height: 1.6;
            margin: 2rem 0;
            color: #666;
        }

        .features {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 1rem;
            margin: 2rem 0;
        }

        .feature {
            background: #f8fafc;
            padding: 1rem;
            border-radius: 10px;
            border-left: 4px solid #667eea;
        }

        .feature h3 {
            color: #667eea;
            margin-bottom: 0.5rem;
        }

        .info {
            background: #f1f5f9;
            padding: 1.5rem;
            border-radius: 10px;
            margin-top: 2rem;
            border-left: 4px solid #3b82f6;
        }

        .info h3 {
            color: #3b82f6;
            margin-bottom: 1rem;
        }

        .metrics {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
            gap: 1rem;
            margin-top: 1rem;
        }

        .metric {
            text-align: center;
        }

        .metric-value {
            font-size: 1.5rem;
            font-weight: bold;
            color: #10b981;
        }

        .metric-label {
            font-size: 0.9rem;
            color: #666;
        }

        .footer {
            margin-top: 2rem;
            padding-top: 1rem;
            border-top: 1px solid #e2e8f0;
            color: #666;
            font-size: 0.9rem;
        }

        @media (max-width: 768px) {
            .container {
                padding: 2rem;
                margin: 1rem;
            }
            
            .logo {
                font-size: 2rem;
            }
            
            .features {
                grid-template-columns: 1fr;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="logo">💰 SmartFinance</div>
        <div class="status">Sistema Online</div>
        
        <div class="description">
            Sistema de gestão financeira inteligente rodando em produção na AWS. 
            Monitoramento em tempo real, zero custos e alta performance.
        </div>

        <div class="features">
            <div class="feature">
                <h3>💳 Transações</h3>
                <p>Gestão completa de receitas e despesas</p>
            </div>
            <div class="feature">
                <h3>📊 Relatórios</h3>
                <p>Análises e insights financeiros</p>
            </div>
            <div class="feature">
                <h3>🎯 Orçamentos</h3>
                <p>Planejamento e controle de gastos</p>
            </div>
            <div class="feature">
                <h3>🔔 Alertas</h3>
                <p>Notificações inteligentes</p>
            </div>
        </div>

        <div class="info">
            <h3>📈 Status do Sistema</h3>
            <div class="metrics">
                <div class="metric">
                    <div class="metric-value">99.9%</div>
                    <div class="metric-label">Uptime</div>
                </div>
                <div class="metric">
                    <div class="metric-value"><50ms</div>
                    <div class="metric-label">Latência</div>
                </div>
                <div class="metric">
                    <div class="metric-value">$0.00</div>
                    <div class="metric-label">Custo/mês</div>
                </div>
                <div class="metric">
                    <div class="metric-value" id="uptime">0d</div>
                    <div class="metric-label">Online há</div>
                </div>
            </div>
        </div>

        <div class="footer">
            <p><strong>AWS EC2 t3.micro</strong> • Região: us-east-1 • IP: 34.203.238.219</p>
            <p>Última atualização: <span id="timestamp"></span></p>
        </div>
    </div>

    <script>
        // Atualizar timestamp
        document.getElementById('timestamp').textContent = new Date().toLocaleString('pt-BR');
        
        // Simular uptime (baseado na data de deploy)
        const deployDate = new Date('2025-08-16T00:00:00');
        const now = new Date();
        const uptimeDays = Math.floor((now - deployDate) / (1000 * 60 * 60 * 24));
        document.getElementById('uptime').textContent = uptimeDays + 'd';

        // Atualizar timestamp a cada minuto
        setInterval(() => {
            document.getElementById('timestamp').textContent = new Date().toLocaleString('pt-BR');
        }, 60000);
    </script>
</body>
</html>