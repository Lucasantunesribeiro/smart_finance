version: '3.8'

services:
  # Nginx Reverse Proxy - Ultra lightweight configuration
  nginx:
    image: nginx:alpine
    container_name: smartfinance-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - frontend
      - backend
      - payment-service
    restart: unless-stopped
    mem_limit: 30m
    memswap_limit: 30m
    networks:
      - smartfinance-network
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend - Next.js Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: production
    container_name: smartfinance-frontend
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=/api/v1
      - NEXT_PUBLIC_SIGNALR_URL=/financehub
      - NEXT_PUBLIC_PAYMENT_SERVICE_URL=/payment
    restart: unless-stopped
    mem_limit: 150m
    memswap_limit: 150m
    networks:
      - smartfinance-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Backend - .NET 8 API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: production
    container_name: smartfinance-backend
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:5000
      - ConnectionStrings__DefaultConnection=Data Source=/app/data/smartfinance.db
      - ConnectionStrings__MongoConnection=mongodb://admin:${MONGO_PASSWORD:-SmartFinance123!}@mongodb:27017/smartfinance?authSource=admin
      - ConnectionStrings__RedisConnection=redis:6379,password=${REDIS_PASSWORD:-SmartFinance123!}
      - JWT_SECRET=${JWT_SECRET:-YourSuperSecretKeyThatIsAtLeast32CharactersLong!}
      - JWT_ISSUER=SmartFinance
      - JWT_AUDIENCE=SmartFinanceUsers
      - CORS_ORIGINS=http://localhost,https://localhost,http://34.203.238.219
    volumes:
      - backend_data:/app/data
      - backend_logs:/app/logs
    restart: unless-stopped
    mem_limit: 200m
    memswap_limit: 200m
    networks:
      - smartfinance-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Payment Microservice - Node.js
  payment-service:
    build:
      context: ./microservice
      dockerfile: Dockerfile
      target: production
    container_name: smartfinance-payment
    environment:
      - NODE_ENV=production
      - PORT=3001
      - MONGODB_URI=mongodb://admin:${MONGO_PASSWORD:-SmartFinance123!}@mongodb:27017/smartfinance_payments?authSource=admin
      - REDIS_URL=redis://redis:6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-SmartFinance123!}
      - JWT_SECRET=${JWT_SECRET:-YourSuperSecretKeyThatIsAtLeast32CharactersLong!}
      - ALLOWED_ORIGINS=http://localhost,https://localhost,http://34.203.238.219
      - MAIN_API_URL=http://backend:5000/api/v1
    depends_on:
      - mongodb
      - redis
    restart: unless-stopped
    mem_limit: 150m
    memswap_limit: 150m
    networks:
      - smartfinance-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # MongoDB - Ultra lightweight configuration
  mongodb:
    image: mongo:5.0-focal
    container_name: smartfinance-mongodb
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD:-SmartFinance123!}
      - MONGO_INITDB_DATABASE=smartfinance
    volumes:
      - mongodb_data:/data/db
    restart: unless-stopped
    mem_limit: 250m
    memswap_limit: 250m
    networks:
      - smartfinance-network
    command: mongod --wiredTigerCacheSizeGB 0.1 --quiet --logpath /dev/null --nojournal
    ports:
      - "27017:27017"
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Redis - Ultra lightweight configuration
  redis:
    image: redis:7-alpine
    container_name: smartfinance-redis
    volumes:
      - redis_data:/data
    restart: unless-stopped
    mem_limit: 64m
    memswap_limit: 64m
    networks:
      - smartfinance-network
    command: redis-server --requirepass ${REDIS_PASSWORD:-SmartFinance123!} --maxmemory 48mb --maxmemory-policy allkeys-lru
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3



volumes:
  backend_data:
    driver: local
  backend_logs:
    driver: local
  mongodb_data:
    driver: local
  redis_data:
    driver: local
  nginx_logs:
    driver: local

networks:
  smartfinance-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16